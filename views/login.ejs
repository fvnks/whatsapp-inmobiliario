<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Iniciar Sesión - Bot de WhatsApp para Propiedades</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --whatsapp-primary: #25d366;
      --whatsapp-dark: #075e54;
      --whatsapp-light: #dcf8c6;
    }
    
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #25d366 0%, #075e54 100%);
      height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow-x: hidden;
    }
    
    .login-container {
      background-color: white;
      border-radius: 15px;
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
      overflow: hidden;
      width: 100%;
      max-width: 420px;
      transform: translateY(0);
      transition: all 0.3s ease;
    }
    
    .login-container:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
    }
    
    .login-header {
      background-color: #075e54;
      color: white;
      padding: 30px 20px;
      text-align: center;
    }
    
    .login-form {
      padding: 30px;
    }
    
    .form-floating {
      margin-bottom: 20px;
    }
    
    .btn-login {
      background-color: #25d366;
      border-color: #25d366;
      color: white;
      width: 100%;
      padding: 12px;
      font-weight: 600;
      letter-spacing: 0.5px;
      margin-top: 10px;
      transition: all 0.3s ease;
    }
    
    .btn-login:hover {
      background-color: #128c7e;
      border-color: #128c7e;
      color: white;
    }
    
    .logo-icon {
      font-size: 3.5rem;
      margin-bottom: 10px;
      animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }
    
    .login-footer {
      text-align: center;
      margin-top: 20px;
      font-size: 0.9rem;
      color: #6c757d;
    }
    
    .form-check {
      display: flex;
      align-items: center;
    }
    
    .form-check-input {
      margin-right: 8px;
    }
    
    .password-toggle {
      position: absolute;
      right: 15px;
      top: 18px;
      cursor: pointer;
      color: #6c757d;
      z-index: 10;
    }
    
    .alert {
      border-radius: 10px;
      padding: 15px;
      margin-bottom: 20px;
    }
    
    .form-control:focus {
      border-color: var(--whatsapp-primary);
      box-shadow: 0 0 0 0.25rem rgba(37, 211, 102, 0.25);
    }
    
    /* Animación para el mensaje de error */
    .shake {
      animation: shake 0.5s linear;
    }
    
    @keyframes shake {
      0% { transform: translateX(0); }
      20% { transform: translateX(-10px); }
      40% { transform: translateX(10px); }
      60% { transform: translateX(-10px); }
      80% { transform: translateX(10px); }
      100% { transform: translateX(0); }
    }
    
    .brand-text {
      font-size: 1.5rem;
      font-weight: 700;
      margin-bottom: 5px;
    }
    
    .brand-subtitle {
      font-size: 1rem;
      opacity: 0.9;
    }
  </style>
</head>
<body>
  <div class="login-container">
    <div class="login-header">
      <div class="logo-icon">
        <i class="fab fa-whatsapp"></i>
      </div>
      <h4 class="brand-text">WhatsApp Property Bot</h4>
      <p class="brand-subtitle mb-0">Plataforma de administración</p>
    </div>
    <div class="login-form">
      <!-- Alerta de error (oculta por defecto) -->
      <div class="alert alert-danger d-none" id="errorAlert" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>
        <span id="errorMessage">Usuario o contraseña incorrectos.</span>
      </div>

      <form id="loginForm">
        <div class="form-floating">
          <input type="text" class="form-control" id="username" name="username" placeholder="Nombre de usuario" autocomplete="username" required>
          <label for="username">Nombre de usuario</label>
        </div>
        <div class="form-floating position-relative">
          <input type="password" class="form-control" id="password" name="password" placeholder="Contraseña" autocomplete="current-password" required>
          <label for="password">Contraseña</label>
          <i class="fas fa-eye password-toggle" id="passwordToggle"></i>
        </div>
        <div class="d-flex justify-content-between align-items-center mb-3">
          <div class="form-check">
            <input class="form-check-input" type="checkbox" id="rememberMe">
            <label class="form-check-label" for="rememberMe">Recordarme</label>
          </div>
        </div>
        <button type="submit" class="btn btn-login">
          <span id="loginButtonText">Iniciar Sesión</span>
          <span id="loginSpinner" class="spinner-border spinner-border-sm ms-2 d-none" role="status" aria-hidden="true"></span>
        </button>
      </form>
      <div class="login-footer">
        <p>¿Olvidaste tu contraseña? Contacta al administrador</p>
        <a href="/" class="text-decoration-none">Volver a la página principal</a>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <!-- SweetAlert -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <!-- Script de login -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const loginForm = document.getElementById('loginForm');
      const errorAlert = document.getElementById('errorAlert');
      const errorMessage = document.getElementById('errorMessage');
      const loginButton = document.querySelector('.btn-login');
      const loginButtonText = document.getElementById('loginButtonText');
      const loginSpinner = document.getElementById('loginSpinner');
      const passwordToggle = document.getElementById('passwordToggle');
      const passwordInput = document.getElementById('password');
      const rememberMeCheckbox = document.getElementById('rememberMe');
      const usernameInput = document.getElementById('username');
      
      // Verificar si hay credenciales guardadas
      const rememberMe = localStorage.getItem('rememberMe') === 'true';
      const savedUsername = localStorage.getItem('savedUsername');
      
      if (rememberMe && savedUsername) {
        usernameInput.value = savedUsername;
        rememberMeCheckbox.checked = true;
      }
      
      // Función para mostrar/ocultar contraseña
      passwordToggle.addEventListener('click', function() {
        if (passwordInput.type === 'password') {
          passwordInput.type = 'text';
          passwordToggle.classList.remove('fa-eye');
          passwordToggle.classList.add('fa-eye-slash');
        } else {
          passwordInput.type = 'password';
          passwordToggle.classList.remove('fa-eye-slash');
          passwordToggle.classList.add('fa-eye');
        }
      });
      
      // Gestionar intento de inicio de sesión
      loginForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Mostrar spinner y deshabilitar botón
        loginButton.disabled = true;
        loginButtonText.textContent = 'Iniciando sesión...';
        loginSpinner.classList.remove('d-none');
        errorAlert.classList.add('d-none');
        
        const username = usernameInput.value;
        const password = passwordInput.value;
        
        try {
          const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ username, password })
          });
          
          const data = await response.json();
          
          if (response.ok) {
            // Guardar preferencia de "recordarme"
            if (rememberMeCheckbox.checked) {
              localStorage.setItem('rememberMe', 'true');
              localStorage.setItem('savedUsername', username);
            } else {
              localStorage.removeItem('rememberMe');
              localStorage.removeItem('savedUsername');
            }
            
            // Guardar token en localStorage
            localStorage.setItem('token', data.token);
            localStorage.setItem('user', JSON.stringify(data.user));
            
            // Establecer la cookie
            document.cookie = `token=${data.token}; path=/; max-age=604800`; // 7 días
            
            // Mostrar mensaje de éxito
            Swal.fire({
              icon: 'success',
              title: '¡Bienvenido!',
              text: `Hola, ${data.user.username}. Iniciando sesión...`,
              showConfirmButton: false,
              timer: 1500
            }).then(() => {
              // Redireccionar al panel de administración
              window.location.href = '/admin';
            });
          } else {
            // Mostrar error
            errorMessage.textContent = data.error?.message || 'Error al iniciar sesión. Inténtalo de nuevo.';
            errorAlert.classList.remove('d-none');
            errorAlert.classList.add('shake');
            
            // Quitar la clase 'shake' después de la animación
            setTimeout(() => {
              errorAlert.classList.remove('shake');
            }, 500);
            
            // Restaurar botón
            loginButton.disabled = false;
            loginButtonText.textContent = 'Iniciar Sesión';
            loginSpinner.classList.add('d-none');
          }
        } catch (error) {
          console.error('Error:', error);
          errorMessage.textContent = 'Error de conexión. Inténtalo de nuevo más tarde.';
          errorAlert.classList.remove('d-none');
          
          // Restaurar botón
          loginButton.disabled = false;
          loginButtonText.textContent = 'Iniciar Sesión';
          loginSpinner.classList.add('d-none');
        }
      });
    });
  </script>
</body>
</html> 